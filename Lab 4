#include <stdio.h>
#include <stdlib.h>

struct Node {
    int value;
    struct Node* next;
};

typedef struct Node* NODE;

NODE getNode() {
    NODE x = (NODE)malloc(sizeof(struct Node));
    if (x == NULL) {
        printf("Memory full\n");
        exit(0);
    }
    return x;
}

NODE insert_beginning(NODE first, int item){
    NODE new;
    new=getNode();
    new->value=item;
    new->next=NULL;
    if (first==NULL){
        first=new;
        return first;
    }
    new->next=first;
    first=new;
    return first;
}

NODE insert_pos(NODE first, int item, int pos){
    int count;
    NODE new,current,prev;
    new=getNode();
    new->value=item;
    new->next=NULL;
    if (first==NULL && pos==1)
        return new;
    count=1;
    current=first;
    prev=NULL;
    while (count!=pos && current!=NULL){
        prev=current;
        current=current->next;
        count++;
    }
    if (current==NULL){
        printf("Invalid position, hence can't insert");
        return first;
    }
    if (count==pos){
        prev->next=new;
        new->next=current;
        return first;
    }
}

NODE insert_end(NODE first, int item){
    NODE prev,last,new;
    new=getNode();
    new->value=item;
    new->next=NULL;
    if (first==NULL){
        first=new;
        return first;
    }
    prev=NULL;
    last=first;
    while (last->next!=NULL){
        prev=last;
        last=last->next;
    }
    last->next=new;
    return first;
}

void display(NODE first){
    NODE temp;
    if (first==NULL){
        printf("Linked list is empty");
    }
    temp=first;
    while (temp!=NULL){
        printf("%d->",temp->value);
        temp=temp->next;
    }
    printf("NULl\n");
}

int main() {
    int choice,value,pos;
    NODE list1=NULL;
    while (1) {
        printf("1. Insert at Beginning\n");
        printf("2. Insert at a Postion\n");
        printf("3. Insert at End\n");
        printf("4. Display List\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to insert at beginning: ");
                scanf("%d", &value);
                list1=insert_beginning(list1,value);
                break;
            case 2:
                printf("Enter value to insert: ");
                scanf("%d", &value);
                printf("Enter position: ");
                scanf("%d",&pos);
                list1=insert_pos(list1,value,pos);
                break;
            case 3:
                printf("Enter value to insert at end: ");
                scanf("%d", &value);
                list1=insert_end(list1,value);
                break;
            case 4:
                display(list1);
                break;
            case 5:
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}
